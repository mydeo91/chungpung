{"version":3,"sources":["components/MainContainer.js","components/Main.js","components/BannerIndex.js","components/Pizza.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["MainContainer","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","BrowserRouter","basename","className","styles","contentbox","Switch","Route","exact","path","component","Main","Pizza","NotFound","Component","components_BannerIndex","id","class","src","alt","href","BannerIndex","App","components_MainContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.472ded52.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Main Components\nimport { Main, Pizza, NotFound } from 'components';\n\n// Styles \nimport styles from 'styles/App.module.scss';\n\nexport class MainContainer extends Component {\n\n  render() {\n    return (\n      <Router basename=\"chungpung\">\n        <div className={styles.contentbox}>\n          <Switch>\n            <Route exact path=\"/\" component={Main} />\n            <Route exact path=\"/pizza\" component={Pizza} />\n            {/* <Route exact path=\"/guestHouse\" component={Main} />\n            <Route exact path=\"/strongFire\" component={Main} />\n            <Route exact path=\"/service\" component={Main} />\n            <Route exact path=\"/news\" component={Main} /> */}\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default MainContainer;","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport { BannerIndex } from 'components';\n\nconst Main = () => {\n    return (\n        <div>\n\n            <BannerIndex />\n\n            <div id=\"main\">\n\n                <section id=\"one\" class=\"tiles\">\n                    <article>\n                        <span class=\"image\">\n                            <img src=\"images/pic01.jpg\" alt=\"\" />\n                        </span>\n                        <header class=\"major\">\n                            <h3><a href=\"landing.html\" class=\"link\">화덕피자</a></h3>\n                            <p>Ipsum dolor sit amet</p>\n                        </header>\n                    </article>\n                    <article>\n                        <span class=\"image\">\n                            <img src=\"images/pic02.jpg\" alt=\"\" />\n                        </span>\n                        <header class=\"major\">\n                            <h3><a href=\"landing.html\" class=\"link\">게스트하우스</a></h3>\n                            <p>feugiat amet tempus</p>\n                        </header>\n                    </article>\n                    <article>\n                        <span class=\"image\">\n                            <img src=\"images/pic03.jpg\" alt=\"\" />\n                        </span>\n                        <header class=\"major\">\n                            <h3><a href=\"landing.html\" class=\"link\">스트롱파이어</a></h3>\n                            <p>Lorem etiam nullam</p>\n                        </header>\n                    </article>\n                    <article>\n                        <span class=\"image\">\n                            <img src=\"images/pic04.jpg\" alt=\"\" />\n                        </span>\n                        <header class=\"major\">\n                            <h3><a href=\"landing.html\" class=\"link\">블로그</a></h3>\n                            <p>Nisl sed aliquam</p>\n                        </header>\n                    </article>\n                    <article>\n                        <span class=\"image\">\n                            <img src=\"images/pic05.jpg\" alt=\"\" />\n                        </span>\n                        <header class=\"major\">\n                            <h3><a href=\"landing.html\" class=\"link\">서비스</a></h3>\n                            <p>Ipsum dolor sit amet</p>\n                        </header>\n                    </article>\n                    <article>\n                        <span class=\"image\">\n                            <img src=\"images/pic06.jpg\" alt=\"\" />\n                        </span>\n                        <header class=\"major\">\n                            <h3><a href=\"landing.html\" class=\"link\">언론뉴스</a></h3>\n                            <p>Feugiat amet tempus</p>\n                        </header>\n                    </article>\n                </section>\n\n            </div>\n\n        </div>\n    );\n};\n\nexport default Main;","import React from 'react';\n\nconst BannerIndex = () => {\n    return (\n        <div id=\"wrapper\">\n            <section id=\"banner\" class=\"major\">\n                <div class=\"inner\">\n                    <header class=\"major\">\n                        <h1>Hi, my name is Forty</h1>\n                    </header>\n                    <div class=\"content\">\n                        <p>A responsive site template designed by HTML5 UP<br />\n                            and released under the Creative Commons.</p>\n                        <ul class=\"actions\">\n                            <li><a href=\"#one\" class=\"button next scrolly\">Get Started</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </section>\n        </div>\n    );\n};\n\nexport default BannerIndex;","import React from 'react';\n\nconst Pizza = () => {\n    return (\n        <div>\n            Pizza Component\n        </div>\n    );\n};\n\nexport default Pizza;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <div>\n            NotFound\n        </div>\n    );\n};\n\nexport default NotFound;","import React, { Component } from 'react';\n// import './App.css';\nimport {MainContainer} from 'components'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <MainContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('contentWrapper')\n);\n    \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}